{"ast":null,"code":"var _jsxFileName = \"/Users/fuencui/Desktop/review_app_fuen/src/InsertDish.jsx\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { Button, Offcanvas } from \"react-bootstrap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InsertDish() {\n  _s();\n\n  const [dish, setDish] = useState({\n    dishName: '',\n    restaurant: '',\n    description: '',\n    rank: '',\n    address: '',\n    base64: ''\n  });\n  const [show, setShow] = useState(false);\n\n  const handleClose = () => setShow(false);\n\n  const handleShow = () => setShow(true);\n\n  const navigate = useNavigate();\n\n  function postDish() {\n    axios.post('/api/dish', dish).then(dishResponse => {\n      navigate('/api/dish');\n    }).catch(e => console.log(e));\n  }\n\n  async function handleImage(e) {\n    let promise = new Promise((resolve, reject) => {\n      const file = e.target.files[0];\n      const filesize = file.size;\n\n      if (filesize > 4100000) {\n        return;\n      } else {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n\n        reader.onload = function (e) {\n          resolve(e.target.result);\n        };\n      }\n    });\n    let result = await promise;\n    setDish({ ...dish,\n      base64: result\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"insertdish\",\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      onClick: handleShow,\n      children: \"Write a Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n      show: show,\n      onHide: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"bi bi-egg-fried\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 28\n          }, this), \" Leave Your Review Here\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: dish.dishName,\n            onChange: e => {\n              setDish({ ...dish,\n                dishName: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: dish.restaurant,\n            onChange: e => {\n              setDish({ ...dish,\n                restaurant: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: dish.description,\n            onChange: e => {\n              setDish({ ...dish,\n                description: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: dish.rank,\n            min: \"0\",\n            max: \"5\",\n            step: \"0.5\",\n            onChange: e => {\n              setDish({ ...dish,\n                rank: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: dish.address,\n            onChange: e => {\n              setDish({ ...dish,\n                address: e.target.value\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/png, image/jpeg\",\n            onChange: e => handleImage(e)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: postDish,\n            children: \"Post Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(InsertDish, \"QrcQMrnTkpApicZh5fTYdXk+2S0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = InsertDish;\n\nvar _c;\n\n$RefreshReg$(_c, \"InsertDish\");","map":{"version":3,"sources":["/Users/fuencui/Desktop/review_app_fuen/src/InsertDish.jsx"],"names":["axios","React","useEffect","useState","useNavigate","Button","Offcanvas","InsertDish","dish","setDish","dishName","restaurant","description","rank","address","base64","show","setShow","handleClose","handleShow","navigate","postDish","post","then","dishResponse","catch","e","console","log","handleImage","promise","Promise","resolve","reject","file","target","files","filesize","size","reader","FileReader","readAsDataURL","onload","result","value"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { Button, Offcanvas } from \"react-bootstrap\";\n\n\n\nexport default function InsertDish() {\n    const [dish, setDish] = useState({\n        dishName: '',\n        restaurant: '',\n        description: '',\n        rank: '',\n        address: '',\n        base64: '',\n    })\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const navigate = useNavigate();\n\n\n    function postDish(){\n        axios.post('/api/dish', dish)\n        .then((dishResponse) => {\n            navigate('/api/dish')\n        })\n        .catch(e => console.log(e));\n    }\n \n    async function handleImage(e) {\n        let promise = new Promise((resolve, reject) => {\n            const file = e.target.files[0];\n            const filesize = file.size;\n            if (filesize > 4100000){\n                return;\n            } else {\n                const reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function(e) {\n                    resolve(e.target.result);\n                }\n            }\n        });\n        let result = await promise;\n\n        setDish({\n            ...dish,\n            base64: result,\n        })\n    }\n\n  return (\n    <div className=\"insertdish\">\n      <Button variant=\"primary\" onClick={handleShow}>\n        Write a Review\n      </Button>\n      <Offcanvas show={show} onHide={handleClose}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title><i class=\"bi bi-egg-fried\"></i> Leave Your Review Here</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n        <div>\n            <input type='text' value={dish.dishName} onChange={e => {setDish({...dish, dishName: e.target.value})}}/>\n            <input type='text' value={dish.restaurant} onChange={e => {setDish({...dish, restaurant: e.target.value})}}/>\n            <input type='text' value={dish.description} onChange={e => {setDish({...dish, description: e.target.value})}}/>\n            <input type='number' value={dish.rank} min=\"0\" max=\"5\" step=\"0.5\" onChange={e => {setDish({...dish, rank: e.target.value})}}/>\n            <input type='text' value={dish.address} onChange={e => {setDish({...dish, address: e.target.value})}}/>\n            <input type='file' accept=\"image/png, image/jpeg\" onChange={e => handleImage(e)}/>\n            <button onClick={postDish}>Post Job</button>\n        </div>\n        </Offcanvas.Body>\n      </Offcanvas>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}