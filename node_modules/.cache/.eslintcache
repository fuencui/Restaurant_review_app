[{"/Users/fuencui/Desktop/1fuen-cui-project3/src/index.js":"1","/Users/fuencui/Desktop/1fuen-cui-project3/src/CreateUser.jsx":"2","/Users/fuencui/Desktop/1fuen-cui-project3/src/UserAccount.jsx":"3","/Users/fuencui/Desktop/1fuen-cui-project3/src/DishList.jsx":"4","/Users/fuencui/Desktop/1fuen-cui-project3/src/DishDetail.jsx":"5","/Users/fuencui/Desktop/1fuen-cui-project3/src/SearchList.jsx":"6","/Users/fuencui/Desktop/1fuen-cui-project3/src/Login.jsx":"7","/Users/fuencui/Desktop/1fuen-cui-project3/src/NavBar.jsx":"8","/Users/fuencui/Desktop/1fuen-cui-project3/src/InsertDish.jsx":"9"},{"size":1026,"mtime":1650848676081,"results":"10","hashOfConfig":"11"},{"size":1402,"mtime":1650875564999,"results":"12","hashOfConfig":"11"},{"size":768,"mtime":1650875592798,"results":"13","hashOfConfig":"11"},{"size":1461,"mtime":1650875564999,"results":"14","hashOfConfig":"11"},{"size":9932,"mtime":1650925856911,"results":"15","hashOfConfig":"11"},{"size":1531,"mtime":1650875564960,"results":"16","hashOfConfig":"11"},{"size":1296,"mtime":1650875564960,"results":"17","hashOfConfig":"11"},{"size":3727,"mtime":1650879069345,"results":"18","hashOfConfig":"11"},{"size":5335,"mtime":1650875564981,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1taerdc",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"23"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"23"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"23"},"/Users/fuencui/Desktop/1fuen-cui-project3/src/index.js",[],[],[],"/Users/fuencui/Desktop/1fuen-cui-project3/src/CreateUser.jsx",[],[],"/Users/fuencui/Desktop/1fuen-cui-project3/src/UserAccount.jsx",[],[],"/Users/fuencui/Desktop/1fuen-cui-project3/src/DishList.jsx",["52","53","54"],[],"import react, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport './DishList.css';\nimport NavBar from './NavBar';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\n\n\nexport default function DishList() {\n    const [allDish, setAllDish] = useState([]);\n\n    function findAllDish() {\n        axios.get('/api/dish')\n            .then(response => {\n                setAllDish(response.data)\n            })\n            .catch(error => console.error(error));\n    }\n\n    useEffect(findAllDish, []);\n\n    function base64ToImage(dish){\n        if(dish.base64 != 'null'){\n            return <img className='img' src={dish.base64}></img>\n        } else {\n            return <h1>Image Not Exists</h1>;\n        }\n    } \n\n    const DishListComponent = [];\n    for (let dish of allDish){\n        DishListComponent.unshift(\n            <div className='dishContainer' key={dish._id}>\n                <Link className='link' to={'/dish/' + dish._id}></Link>\n                 {base64ToImage(dish)}\n                <h5>Dish: {dish.dishName}</h5>\n                <h5>Restaurant: {dish.restaurant}</h5>\n                <h5>Average Rating: {dish.rank}</h5> \n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <NavBar onClick={findAllDish()}/>\n            <h1>Recent Comments</h1>\n            <div className='ListContainer'>\n                {DishListComponent}\n            </div>\n        </div>\n    )\n}","/Users/fuencui/Desktop/1fuen-cui-project3/src/DishDetail.jsx",["55","56"],[],"/Users/fuencui/Desktop/1fuen-cui-project3/src/SearchList.jsx",["57","58","59","60"],[],"import react, {useEffect, useState} from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport NavBar from './NavBar';\nimport 'bootstrap-icons/font/bootstrap-icons.css';\n\nexport default function SearchList() {\n    const [searchDish, setSearchList] = useState([]);\n    const param = useParams();\n\n    function findAllDish() {\n        axios.get('/api/dish/search/' + param.searchId)\n        .then(response => {\n            setSearchList(response.data)\n        })\n        .catch(error => console.error(error));\n    }\n\n    useEffect(findAllDish, []);\n\n    function base64ToImage(dish){\n        if(dish.base64 != 'null'){\n            return <img className='img' src={dish.base64}></img>\n        } else {\n            return <h1>Image Not Exists</h1>;\n        }\n    } \n\n    const DishListComponent = [];\n    for (let dish of searchDish){\n        DishListComponent.unshift(\n            <div className='dishContainer' key={dish._id}>\n                <Link className='link' to={'/dish/' + dish._id}></Link>\n                 {base64ToImage(dish)}\n                <h5>Dish: {dish.dishName}</h5>\n                <h5>Restaurant: {dish.restaurant}</h5>\n                <h5>Average Rating: {dish.rank}</h5> \n            </div>\n        )\n    }\n\n    return (\n        <div>\n            <NavBar onClick={findAllDish()}/>\n            <h1>Recent Comments</h1>\n            <div className='ListContainer'>\n                {DishListComponent}\n            </div>\n        </div>\n    )\n}","/Users/fuencui/Desktop/1fuen-cui-project3/src/Login.jsx",[],[],"/Users/fuencui/Desktop/1fuen-cui-project3/src/NavBar.jsx",["61"],[],"import React from \"react\";\nimport { Navbar, Container, Nav, NavDropdown, Button, Form, FormControl} from \"react-bootstrap\"; \nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport './NavBar.css';\nimport InsertDish from './InsertDish';\n\n\nexport default function NavBar(props) {\n    const [formInput, setFormInput] = useState('');\n    const [username, setUsername] = useState(null);\n    const navigate = useNavigate();\n\n    useEffect(function() {\n        axios.get('/api/user/isLoggedIn')\n        .then(response => setUsername(response.data.username))\n        .catch(error => console.log(\"User is not logged in \" + username));\n    }, [])\n\n    async function logout(){\n        let promise = new Promise((resolve, reject) => {\n            axios.post('/api/user/logout')\n            .then(reponse => {\n                resolve(null);\n            })\n            .catch(error => reject('Error logging out'));\n        });\n        let result = await promise;\n        if (result === null){\n            setUsername(result);\n            navigate('/')\n        }\n    }\n\n    function handleSearch(){\n        navigate('/search/' + formInput)\n        \n    }\n\n\n    function underDropDown(){\n        if (username){\n            return (\n                <NavDropdown title={<i className=\"bi bi-person-check-fill\">{username}</i>} id=\"navbarScrollingDropdown\">\n                <NavDropdown.Item href={\"/userAccount/\" + username} >User Account</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action4\">My Reviews</NavDropdown.Item>\n                <NavDropdown.Item onClick={logout}>Log Out</NavDropdown.Item>\n                </NavDropdown>\n                \n            )\n        } else {\n            return (\n                <NavDropdown title='Register Or Log In' id=\"navbarScrollingDropdown\">\n                <NavDropdown.Item href='/createUser'>Create New Account</NavDropdown.Item>\n                <NavDropdown.Item href=\"/login\">Log In</NavDropdown.Item>\n                </NavDropdown>\n            )\n        }\n    }\n\n    function ableToReviews(){\n        if (username){\n            return <Nav.Item><InsertDish/></Nav.Item>\n        }\n    }\n\n    function handleKeyPress(event) {\n        if(event.key === 'Enter'){\n            navigate('/search/' + formInput)\n        }\n      }\n\n    return (\n        <div className='navBar'>\n        <Navbar bg=\"light\" expand=\"lg\" >\n        <Container fluid className=\"nana\">\n            <Navbar.Brand href=\"/\"><i className=\"bi bi-camera-fill\"></i> FoodReviewApp</Navbar.Brand>\n            <Navbar.Toggle aria-controls=\"navbarScroll\" />\n            <Navbar.Collapse id=\"navbarScroll\">\n            <Nav\n                className=\"me-auto my-2 my-lg-0\"\n                style={{ maxHeight: '100px' }}\n                navbarScroll\n            >\n                <Nav.Link href=\"/\"><i className=\"bi bi-shop\">Home</i></Nav.Link>\n                {underDropDown()}\n                {ableToReviews()}\n            </Nav>\n            \n            <Form className=\"d-flex\">\n                <FormControl\n                type=\"text\"\n                value={formInput}\n                onChange={(e) => setFormInput(e.target.value)}\n                onKeyPress={(e) => handleKeyPress(e)}\n                placeholder=\"Search\"\n                className=\"me-2\"\n                aria-label=\"Search\"\n                \n                />\n                <Button onClick={handleSearch}\n                variant=\"outline-success\"\n                >\n                Search</Button>\n            </Form>\n            </Navbar.Collapse>\n        </Container>\n        </Navbar>\n        </div>\n    )\n}","/Users/fuencui/Desktop/1fuen-cui-project3/src/InsertDish.jsx",["62"],[],"import axios from \"axios\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { Button, Offcanvas ,InputGroup ,FormControl} from \"react-bootstrap\";\n\n\n\nexport default function InsertDish() {\n    const [dish, setDish] = useState({\n        dishName: '',\n        restaurant: '',\n        description: '',\n        rank: '',\n        address: '',\n        base64: '',\n        username: '',\n    })\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n    const navigate = useNavigate();\n\n    useEffect(function() {\n        axios.get('/api/user/isLoggedIn')\n        .then(response => setDish({...dish, username:response.data.username}))\n        .catch(error => console.log(\"User is not logged in \"));\n    }, [])\n\n\n    async function postDish(){\n        const promise = new Promise((resolve, reject) => {\n            \n            axios.post('/api/dish', dish)\n            .then((dish) => {\n                resolve(dish.data._id);\n                \n            })\n            .catch(e => console.log(e));\n            setShow(false);\n        });\n        const id = await promise;\n\n        navigate('/dish/' + id)\n    }\n \n    async function handleImage(e) {\n        let promise = new Promise((resolve, reject) => {\n            const file = e.target.files[0];\n            const filesize = file.size;\n            if (filesize > 4100000){\n                return;\n            } else {\n                const reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = function(e) {\n                    resolve(e.target.result);\n                }\n            }\n        });\n        let result = await promise;\n\n        setDish({\n            ...dish,\n            base64: result,\n        })\n    }\n\n  return (\n    <div className=\"insertdish\">\n      <Button variant=\"success\" style={{backgroundColor : '#70a9a1', border : '0px'}}onClick={handleShow}>\n        Write a Review\n      </Button>\n      <Offcanvas show={show} onHide={handleClose}>\n        <Offcanvas.Header closeButton>\n          <Offcanvas.Title><i className=\"bi bi-egg-fried\"></i> Leave Your Review Here</Offcanvas.Title>\n        </Offcanvas.Header>\n        <Offcanvas.Body>\n        {/* <div>\n            <input type='text' value={dish.dishName} onChange={e => {setDish({...dish, dishName: e.target.value})}}/>\n            <input type='text' value={dish.restaurant} onChange={e => {setDish({...dish, restaurant: e.target.value})}}/>\n            <input type='text' value={dish.description} onChange={e => {setDish({...dish, description: e.target.value})}}/>\n            <input type='number' value={dish.rank} min=\"0\" max=\"5\" step=\"0.5\" onChange={e => {setDish({...dish, rank: e.target.value})}}/>\n            <input type='text' value={dish.address} onChange={e => {setDish({...dish, address: e.target.value})}}/>\n            <input type='file' accept=\"image/png, image/jpeg\" onChange={e => handleImage(e)}/>\n            <button onClick={postDish}>Post Job</button>\n        </div> */}\n        <InputGroup size=\"sm\" className=\"mb-3\">\n            <InputGroup.Text id=\"inputGroup-sizing-sm\" >Dish</InputGroup.Text>\n            <FormControl type='text' value={dish.dishName} onChange={e => {setDish({...dish, dishName: e.target.value})}} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\n        </InputGroup>\n        <InputGroup size=\"sm\" className=\"mb-3\">\n            <InputGroup.Text id=\"inputGroup-sizing-sm\">Restaurant</InputGroup.Text>\n            <FormControl value={dish.restaurant} onChange={e => {setDish({...dish, restaurant: e.target.value})}} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\n        </InputGroup>\n        <InputGroup size=\"sm\" className=\"mb-3\">\n            <InputGroup.Text id=\"inputGroup-sizing-sm\">Description</InputGroup.Text>\n            <FormControl type='text' value={dish.description} onChange={e => {setDish({...dish, description: e.target.value})}} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\n        </InputGroup>\n        <InputGroup size=\"sm\" className=\"mb-3\">\n            <InputGroup.Text id=\"inputGroup-sizing-sm\">Rank</InputGroup.Text>\n            <FormControl type='number' value={dish.rank} min=\"0\" max=\"5\" step=\"0.5\" onChange={e => {setDish({...dish, rank: e.target.value})}} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\n        </InputGroup>\n        <InputGroup size=\"sm\" className=\"mb-3\">\n            <InputGroup.Text id=\"inputGroup-sizing-sm\">address</InputGroup.Text>\n            <FormControl type='text' value={dish.address} onChange={e => {setDish({...dish, address: e.target.value})}} aria-label=\"Small\" aria-describedby=\"inputGroup-sizing-sm\" />\n        </InputGroup>\n        <InputGroup size=\"sm\" className=\"mb-3\">\n            <InputGroup.Text id=\"inputGroup-sizing-sm\">Image</InputGroup.Text>\n            <FormControl type='file' name='file' title='title' accept=\"image/png, image/jpeg\" onChange={e => handleImage(e)}/>\n        </InputGroup>\n        <Button variant=\"primary\" size=\"lg\" onClick={postDish} style={{backgroundColor : '#90be6d', border: '0px'}}>\n            Post Review\n        </Button>\n        </Offcanvas.Body>\n      </Offcanvas>\n    </div>\n  );\n}\n",{"ruleId":"63","severity":1,"message":"64","line":1,"column":8,"nodeType":"65","messageId":"66","endLine":1,"endColumn":13},{"ruleId":"67","severity":1,"message":"68","line":23,"column":24,"nodeType":"69","messageId":"70","endLine":23,"endColumn":26},{"ruleId":"71","severity":1,"message":"72","line":24,"column":20,"nodeType":"73","endLine":24,"endColumn":59},{"ruleId":"74","severity":1,"message":"75","line":43,"column":12,"nodeType":"76","endLine":43,"endColumn":47,"suggestions":"77"},{"ruleId":"71","severity":1,"message":"72","line":79,"column":20,"nodeType":"73","endLine":79,"endColumn":59},{"ruleId":"63","severity":1,"message":"64","line":1,"column":8,"nodeType":"65","messageId":"66","endLine":1,"endColumn":13},{"ruleId":"74","severity":1,"message":"78","line":20,"column":28,"nodeType":"76","endLine":20,"endColumn":30,"suggestions":"79"},{"ruleId":"67","severity":1,"message":"68","line":23,"column":24,"nodeType":"69","messageId":"70","endLine":23,"endColumn":26},{"ruleId":"71","severity":1,"message":"72","line":24,"column":20,"nodeType":"73","endLine":24,"endColumn":59},{"ruleId":"74","severity":1,"message":"80","line":21,"column":8,"nodeType":"76","endLine":21,"endColumn":10,"suggestions":"81"},{"ruleId":"74","severity":1,"message":"82","line":29,"column":8,"nodeType":"76","endLine":29,"endColumn":10,"suggestions":"83"},"no-unused-vars","'react' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'comment', 'findAllComment', and 'param.dishId'. Either include them or remove the dependency array. You can also do a functional update 'setComment(c => ...)' if you only need 'comment' in the 'setComment' call.","ArrayExpression",["84"],"React Hook useEffect has a missing dependency: 'param.searchId'. Either include it or remove the dependency array.",["85"],"React Hook useEffect has a missing dependency: 'username'. Either include it or remove the dependency array.",["86"],"React Hook useEffect has a missing dependency: 'dish'. Either include it or remove the dependency array. You can also do a functional update 'setDish(d => ...)' if you only need 'dish' in the 'setDish' call.",["87"],{"desc":"88","fix":"89"},{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [comment, findAllComment, param.dishId, setComment, setCommentList, setDish]",{"range":"96","text":"97"},"Update the dependencies array to be: [param.searchId]",{"range":"98","text":"99"},"Update the dependencies array to be: [username]",{"range":"100","text":"101"},"Update the dependencies array to be: [dish]",{"range":"102","text":"103"},[1637,1672],"[comment, findAllComment, param.dishId, setComment, setCommentList, setDish]",[614,616],"[param.searchId]",[775,777],"[username]",[879,881],"[dish]"]